@startuml api-endpoints
skinparam actorStyle awesome
actor User

rectangle "Backend (FastAPI)" {
  package "Model Endpoints (/api/models/...)" {
    [GET /models/embeddings]
    [GET /models]

    [POST /models/upload]
    [POST /models/batch-upload]
    [POST /models/train]
    [GET /models/train-status/{id}]
    
    [POST /models/evaluate]
    [GET /models/evaluate/status/{id}]
  }

  package "Dataset Endpoints (/api/datasets/...)" {
    [GET /datasets]
    [POST /datasets/upload]
    [POST /datasets/generate]
  }
  
  package "Task Endpoints (/api/tasks/...)" {
    [GET /tasks]
    [GET /tasks/{id}]
  }

  package "Internal Processes" {
    [GitHub Pull / Hugging Face Pull]
    [Save Model to Filesystem (/app/data/models)]
    [Create Database Entry for Model]
    
    [Start Asynchronous Training]
    [Start Asynchronous Evaluation]
    [Generate Synthetic Data]
    [Convert and Save Dataset to DB]
    
    [Run Training/Evaluation Scripts]
    [Update Task Status in Database]
    [Increase Model Request Count]
  }
}

[POST /models/upload] --> [GitHub Pull / Hugging Face Pull]
[POST /models/batch-upload] --> [GitHub Pull / Hugging Face Pull]
[GitHub Pull / Hugging Face Pull] --> [Save Model to Filesystem (/app/data/models)]
[GitHub Pull / Hugging Face Pull] --> [Create Database Entry for Model]

[POST /datasets/generate] --> [Generate Synthetic Data]
[Generate Synthetic Data] --> [Convert and Save Dataset to DB]
[POST /datasets/upload] --> [Convert and Save Dataset to DB]

[POST /models/train] --> [Start Asynchronous Training]
[Start Asynchronous Training] --> [Run Training/Evaluation Scripts]
[Start Asynchronous Training] --> [Update Task Status in Database]

[POST /models/evaluate] --> [Start Asynchronous Evaluation]
[Start Asynchronous Evaluation] --> [Run Training/Evaluation Scripts]
[Start Asynchronous Evaluation] --> [Update Task Status in Database]

[GET /models/embeddings] --> [Increase Model Request Count]

User --> [GET /models/embeddings]
User --> [GET /models]
User --> [POST /models/upload]
User --> [POST /models/batch-upload]
User --> [POST /models/train]
User --> [GET /models/train-status/{id}]
User --> [POST /models/evaluate]
User --> [GET /models/evaluate/status/{id}]
User --> [GET /datasets]
User --> [POST /datasets/upload]
User --> [POST /datasets/generate]
User --> [GET /tasks]
User --> [GET /tasks/{id}]
@enduml
